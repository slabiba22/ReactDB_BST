
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import student.TestCase;

/**
 * This class tests the methods of RectangleDB class
 * which serves as the entry point of the command line
 * program.
 * 
 * @author CS Staff
 * 
 * @version 2024-05-22
 */
public class RectangleDBTest extends TestCase {

    // ----------------------------------------------------------
    /**
     * Read contents of a file into a string
     * 
     * @param path
     *            File name
     * @return the string
     * @throws IOException
     */
    static String readFile(String path) throws IOException {
        byte[] encoded = Files.readAllBytes(Paths.get(path));
        return new String(encoded);
    }
 

    /**
     * Example 1: Tests the main method when the file name is invalid.
     */
    public void testMainNoArgs() {
        String[] testInput = {};
        RectangleDB.main(testInput);
        assertTrue(fuzzyContains(systemOut().getHistory(), "Invalid file"));
    }
 

    /**
     * Example 2: Tests the main method when the file name is valid.
     */
    /**
     * This method tests the main functionality of the  RectangleDB class.
     * It creates an instance of  RectangleDB, calls the toString() method,
     * sets the expected output, sets the test input, and calls the main method
     * of  RectangleDB with the test input. Finally, it asserts that the
     * expected output matches the system output.
     * 
     * @throws IOException
     */
    public void testMain() throws IOException {

        // Creates an instance of the RectangleDB
        RectangleDB rectDB = new RectangleDB();

        // Sets the test input file.
        // This file contains a list of commands to be executed.
        String[] testInput = { "P1test2.txt" }; 
                                                   
        String testOutput = "P1test2out.txt"; 
        RectangleDB.main(testInput);


        String expected = readFile(testOutput); 

        // asserts that the expected output matches the system output
        // generated by the main method of SkipListProject.
        assertFuzzyEquals(expected, systemOut().getHistory());
    }
}
